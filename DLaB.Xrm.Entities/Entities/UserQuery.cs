//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public enum UserQueryState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}

    /// <summary>
    /// Saved database query that is owned by a user.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("userquery")]
    public partial class UserQuery : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the userquery entity
        /// </summary>
        public partial class Fields
        {
            public const string AdvancedGroupBy = "advancedgroupby";
            public const string business_unit_userquery = "business_unit_userquery";
            public const string ColumnSetXml = "columnsetxml";
            public const string ConditionalFormatting = "conditionalformatting";
            public const string CreatedBy = "createdby";
            public const string CreatedByName = "createdbyname";
            public const string CreatedByYomiName = "createdbyyominame";
            public const string CreatedOn = "createdon";
            public const string CreatedOnBehalfBy = "createdonbehalfby";
            public const string CreatedOnBehalfByName = "createdonbehalfbyname";
            public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
            public const string Description = "description";
            public const string FetchXml = "fetchxml";
            public const string LayoutJson = "layoutjson";
            public const string LayoutXml = "layoutxml";
            public const string lk_userquery_createdby = "lk_userquery_createdby";
            public const string lk_userquery_createdonbehalfby = "lk_userquery_createdonbehalfby";
            public const string lk_userquery_modifiedby = "lk_userquery_modifiedby";
            public const string lk_userquery_modifiedonbehalfby = "lk_userquery_modifiedonbehalfby";
            public const string ModifiedBy = "modifiedby";
            public const string ModifiedByName = "modifiedbyname";
            public const string ModifiedByYomiName = "modifiedbyyominame";
            public const string ModifiedOn = "modifiedon";
            public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
            public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
            public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
            public const string Name = "name";
            public const string OfflineSqlQuery = "offlinesqlquery";
            public const string OwnerId = "ownerid";
            public const string OwnerIdName = "owneridname";
            public const string OwnerIdYomiName = "owneridyominame";
            public const string OwningBusinessUnit = "owningbusinessunit";
            public const string OwningBusinessUnitName = "owningbusinessunitname";
            public const string OwningTeam = "owningteam";
            public const string OwningUser = "owninguser";
            public const string ParentQueryId = "parentqueryid";
            public const string QueryType = "querytype";
            public const string ReturnedTypeCode = "returnedtypecode";
            public const string StateCode = "statecode";
            public const string StateCodeName = "statecodename";
            public const string StatusCode = "statuscode";
            public const string StatusCodeName = "statuscodename";
            public const string team_userquery = "team_userquery";
            public const string user_userquery = "user_userquery";
            public const string UserQueryId = "userqueryid";
            public const string Id = "userqueryid";
            public const string VersionNumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public UserQuery(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public UserQuery(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public UserQuery(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public UserQuery() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "userqueryid";

        public const string PrimaryNameAttribute = "name";

        public const string EntitySchemaName = "UserQuery";

        public const string EntityLogicalName = "userquery";

        public const string EntityLogicalCollectionName = "userqueries";

        public const string EntitySetName = "userqueries";

        /// <summary>
        /// Type the column name that will be used to group the results from the data collected across multiple records from a user view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("advancedgroupby")]
        public string AdvancedGroupBy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("advancedgroupby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("advancedgroupby", value);
            }
        }

        /// <summary>
        /// Shows the columns and sorting criteria for the saved view, stored in XML format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnsetxml")]
        public string ColumnSetXml
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("columnsetxml");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("columnsetxml", value);
            }
        }

        /// <summary>
        /// Type information about how the items in the user view are formatted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conditionalformatting")]
        public string ConditionalFormatting
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("conditionalformatting");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("conditionalformatting", value);
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdby", value);
            }
        }

        /// <summary>
        /// Name of the user who created the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string CreatedByName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdbyname", value);
            }
        }

        /// <summary>
        /// YomiName of the user who created the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string CreatedByYomiName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdbyyominame", value);
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdon", value);
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string CreatedOnBehalfByName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfbyname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string CreatedOnBehalfByYomiName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfbyyominame", value);
            }
        }

        /// <summary>
        /// Type additional information to describe the saved view, such as the filter criteria or intended results set.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string Description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("description", value);
            }
        }

        /// <summary>
        /// Contains the Fetch XML query that defines the entities and attributes included in the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fetchxml")]
        public string FetchXml
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("fetchxml");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("fetchxml", value);
            }
        }

        /// <summary>
        /// Layout data in JSON format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutjson")]
        public string LayoutJson
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("layoutjson");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("layoutjson", value);
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutxml")]
        public string LayoutXml
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("layoutxml");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("layoutxml", value);
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedby", value);
            }
        }

        /// <summary>
        /// Name of the user who last modified the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string ModifiedByName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedbyname", value);
            }
        }

        /// <summary>
        /// YomiName of the user who last modified the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string ModifiedByYomiName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedbyyominame", value);
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedon", value);
            }
        }

        /// <summary>
        /// Shows who last updated the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfbyname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string ModifiedOnBehalfByYomiName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfbyyominame", value);
            }
        }

        /// <summary>
        /// Type a descriptive name for the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
        public string Name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("name", value);
            }
        }

        /// <summary>
        /// String specifying the corresponding sql query for the fetch xml specified for offline use.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("offlinesqlquery")]
        public string OfflineSqlQuery
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("offlinesqlquery");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("offlinesqlquery", value);
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference OwnerId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner of the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string OwnerIdName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owneridname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string OwnerIdYomiName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owneridyominame", value);
            }
        }

        /// <summary>
        /// Shows the business unit that the record owner belongs to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string OwningBusinessUnitName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunitname", value);
            }
        }

        /// <summary>
        /// Unique identifier of the team who owns this saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningteam", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who owns this saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owninguser", value);
            }
        }

        /// <summary>
        /// Choose the ID of the saved query that the record was created from.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentqueryid")]
        public Microsoft.Xrm.Sdk.EntityReference ParentQueryId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentqueryid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("parentqueryid", value);
            }
        }

        /// <summary>
        /// Shows the code for the query type to indicate whether the saved view is an address book filter, advanced search, or other view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("querytype")]
        public System.Nullable<int> QueryType
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("querytype");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("querytype", value);
            }
        }

        /// <summary>
        /// Type of entity that the saved view displays.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("returnedtypecode")]
        public string ReturnedTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("returnedtypecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("returnedtypecode", value);
            }
        }

        /// <summary>
        /// Shows whether the saved view is active or inactive.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual UserQueryState? StateCode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserQueryState?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string StateCodeName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecodename", value);
            }
        }

        /// <summary>
        /// Select the item's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual Microsoft.Xrm.Sdk.OptionSetValue StatusCode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value);
            }
        }

        /// <summary>
        /// Select the item's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual UserQuery_StatusCode? StatusCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserQuery_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string StatusCodeName
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscodename", value);
            }
        }

        /// <summary>
        /// Unique identifier of the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userqueryid")]
        public System.Nullable<System.Guid> UserQueryId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("userqueryid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("userqueryid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userqueryid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.UserQueryId = value;
            }
        }

        /// <summary>
        /// Version number of the saved view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("versionnumber", value);
            }
        }

        /// <summary>
        /// N:1 business_unit_userquery
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_userquery")]
        public Entities.BusinessUnit business_unit_userquery
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.BusinessUnit>("business_unit_userquery", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.BusinessUnit>("business_unit_userquery", null, value);
            }
        }

        /// <summary>
        /// N:1 lk_userquery_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_createdby")]
        public Entities.SystemUser lk_userquery_createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>("lk_userquery_createdby", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.SystemUser>("lk_userquery_createdby", null, value);
            }
        }

        /// <summary>
        /// N:1 lk_userquery_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_createdonbehalfby")]
        public Entities.SystemUser lk_userquery_createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>("lk_userquery_createdonbehalfby", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.SystemUser>("lk_userquery_createdonbehalfby", null, value);
            }
        }

        /// <summary>
        /// N:1 lk_userquery_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_modifiedby")]
        public Entities.SystemUser lk_userquery_modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>("lk_userquery_modifiedby", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.SystemUser>("lk_userquery_modifiedby", null, value);
            }
        }

        /// <summary>
        /// N:1 lk_userquery_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_modifiedonbehalfby")]
        public Entities.SystemUser lk_userquery_modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>("lk_userquery_modifiedonbehalfby", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.SystemUser>("lk_userquery_modifiedonbehalfby", null, value);
            }
        }

        /// <summary>
        /// N:1 team_userquery
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_userquery")]
        public Entities.Team team_userquery
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.Team>("team_userquery", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.Team>("team_userquery", null, value);
            }
        }

        /// <summary>
        /// N:1 user_userquery
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_userquery")]
        public Entities.SystemUser user_userquery
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>("user_userquery", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<Entities.SystemUser>("user_userquery", null, value);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public UserQuery(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["userqueryid"] = base.Id;
                        break;
                    case "userqueryid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }
}